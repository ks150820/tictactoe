package src;

import java.util.List;
import java.util.Arrays;
import java.util.ArrayList;
import java.util.Random;
import java.util.Scanner;

public class TicTacToe {
	static ArrayList<Integer> playerPositions=new ArrayList<Integer>();
	static ArrayList<Integer> cpuPositions=new ArrayList<Integer>();
	
	public static void main(String[] args) {
		char[][] gameboard= {{' ','|',' ','|',' '},
				{'-','+','-','+','-'},
				{' ','|',' ','|',' '},
				{'-','+','-','+','-'},
				{' ','|',' ','|',' '}
				};
		printgameboard(gameboard);
		while(true) {
			Scanner scan = new Scanner(System.in);
			System.out.println("enter number between [1-9] :");
			int pos =scan.nextInt();
			while(playerPositions.contains(pos) || cpuPositions.contains(playerPositions)) {
				pos=scan.nextInt();
			}
		

			placepos(gameboard,pos,"player");
			String result= checkwinner();
			if(result.length() >0 ) {
				System.out.println(result);
				break;
			}
			
			Random rand = new Random();
			int cpupos=rand.nextInt(9)+1;
			while(playerPositions.contains(cpupos) || cpuPositions.contains(cpuPositions)) {
				cpupos=rand.nextInt(9) +1;
			}
			placepos(gameboard,cpupos,"cpu");
			printgameboard(gameboard);
			
			result=checkwinner();
			if(result.length() >0) {
				System.out.println(result);
				break;
			}
			
		}

	}
	public static void printgameboard(char[][] gameboard) {
		for(char[] r: gameboard)
		{
			for(char c: r )
			{
				System.out.print(c);
			}
			System.out.println();
		}
	}
	public static void placepos(char[][] gameboard,int pos,String user) {
		char symbol= ' ' ;
		if(user.equals("player")) {
			symbol='X';
			playerPositions.add(pos);
		}else if(user.equals("cpu")) {
			symbol= 'O';
			cpuPositions.add(pos);
		}
		switch(pos){
			case 1: 
				gameboard[0][0]= symbol;
			    break;
			case 2: 
				gameboard[0][2]= symbol;
			    break;
			case 3: 
				gameboard[0][4]= symbol;
		      	break;
			case 4: 
				gameboard[2][0]= symbol;
			    break;
			case 5: 
				gameboard[2][2]= symbol;
			    break;
			case 6: 
				gameboard[2][4]= symbol;
			    break;
			case 7:
				gameboard[4][0]= symbol;
			    break;
			case 8: 
				gameboard[4][2]= symbol;
			    break;
			case 9: 
				gameboard[4][4]= symbol;
			    break;
			default:break;
		}
	
	}
	public static String checkwinner() {
	       List topRow = Arrays.asList(1,2,3);        
	       List midRow = Arrays.asList(4,5,6);
	       List botRow = Arrays.asList(7,8,9);
	       List leftCol = Arrays.asList(1,4,7);
	       List midCol = Arrays.asList(2,5,8);
	       List rightCol = Arrays.asList(3,6,9);
	       List crossOne = Arrays.asList(1,5,9);
           List crossTwo = Arrays.asList(7,5,3);

	        List<List> winning = new ArrayList<List>();
	        winning.add(topRow);
	        winning.add(midRow);
	        winning.add(botRow);
	        winning.add(leftCol);
	        winning.add(midCol);
	        winning.add(rightCol);
	        winning.add(crossOne);
	        winning.add(crossTwo);
	        
	        for(List l: winning) {
	        	if(playerPositions.containsAll(l)) {
	        		return "Congratulation you won!";
	        	}else if(cpuPositions.containsAll(l)) {
	        		return "CPU wins!";
	        	}else if(playerPositions.size() + cpuPositions.size() == 9) {
	        		return "tie!";
	        	}
	        }
	        return "";
	
  }
}

			

